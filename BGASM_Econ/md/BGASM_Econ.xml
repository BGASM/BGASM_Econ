<?xml version="1.0" encoding="utf-8" ?>
<mdscript name="BGASM_Econ"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >

<!--
  TODO: measure each frame time instead of sampling the game fps, to enable
  more detailed statistics on frame variance.
-->
<cues>
  <!-- Register the main lua file. -->
  <cue name="Load_Lua_Files" instantiate="true">
    <conditions>
      <event_ui_triggered screen="'Lua_Loader'" control="'Ready'" />
    </conditions>
    <actions>
      <raise_lua_event name="'Lua_Loader.Load'"
                       param="'extensions.BGASM_Econ.lua.Scan_Econ'"/>
    </actions>
  </cue>

  <cue name="Server_Reader_Wrapper">
    <cues>
      <cue name="Server_Reader" ref="md.Pipe_Server_Lib.Server_Reader">
        <param name="Actions_On_Reload"   value="Actions_On_Reload"/>
        <param name="Actions_On_Connect"  value="Actions_On_Connect"/>
        <param name="Actions_On_Read"     value="Actions_On_Read"/>
      </cue>
    </cues>
  </cue>

  <library name="Actions_On_Reload">
    <actions>
      <set_value name="$Pipe_Name" exact="'bgasm_scan_econ'" />
    </actions>
  </library>

  <library name="Actions_On_Connect">
    <actions>
      <signal_cue cue="$Start_Reading" />
    </actions>
  </library>

  <library name="Actions_On_Read">
    <actions>
      <debug_text text="'received mesage: %s.'.[event.param]"
                chance="$DebugChance" filter="general"/>
    </actions>
  </library>


  <!-- Register the python server. -->
  <cue name="Register_Pipe_Server" instantiate="true">
    <conditions>
      <event_cue_signalled cue="md.Pipe_Server_Host.Reloaded" />
    </conditions>
    <actions>
      <signal_cue_instantly
        cue="md.Pipe_Server_Host.Register_Module"
        param="'extensions/BGASM_Econ/python/BGASM_Scan/scan_econ.py'"/>
      <raise_lua_event name="'Scan_Econ.Get_Sample'"/>
    </actions>
  </cue>

  <!--
    Sample once every second. This will bounce off lua to pick up some
    information.
  -->
  <cue name="Trigger_Sample" instantiate="true" checkinterval="60s">
    <!--No conditions.-->
    <actions>
      <raise_lua_event name="'Scan_Econ.Get_Sample'"/>
    </actions>
  </cue>



  <!--
  When lua responds, capture its message, fill in additional information,
  and send it all to python for handling.

  Messages will be key:value pairs, semicolon separated, starting
  with an 'update;' string.
  -->
  <cue name="Send_Sample" instantiate="true">
    <conditions>
      <event_ui_triggered screen="'Scan_Econ'" control="'Sample'" />
    </conditions>
    <actions>
      <!-- Grab the returned value, use it to init the dict of measurements.-->
      <set_value name="$response" exact="event.param3" />

      <!--Construct the message string.-->
      <set_value name="$msg" exact="'update;'" />
      <do_for_each name="$key" valuename="$value" in="$response">
        <set_value name="$msg" exact="'%s%s:%s;'.[$msg, $key, $value]"/>
      </do_for_each>

      <!--Send to the pipe.-->
      <signal_cue_instantly
        cue="md.Named_Pipes.Write"
        param="table[$pipe='bgasm_scan_econ', $msg=$msg]"/>
    </actions>
  </cue>


</cues>

</mdscript>